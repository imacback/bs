<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.0.xsd"
       default-lazy-init="true">

    <description>Quartz的本地Cron式执行任务配置</description>

    <bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
          lazy-init="false">
        <property name="triggers">
            <list>
                <ref bean="upgradeTrigger"/><!-- 升级信息 -->
                <ref bean="bookCounterTrigger"/><!-- 每日书籍pv统计 -->
                <ref bean="statisTrigger"/><!-- 统计 -->
                <ref bean="pushInfoTrigger"/><!-- 消息push -->
                <ref bean="providerTrigger"/><!-- cp书籍统计 -->
                <ref bean="chapterAutoPublishTrigger"/><!-- 章节自动发布 -->
                <ref bean="categoryTrigger"/><!-- 分类书籍统计 -->
                <ref bean="batchTrigger"/><!-- 批次书籍统计 -->
                <ref bean="tagTrigger"/><!-- 标签书籍统计 -->
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">20</prop>
            </props>
        </property>
        <property name="startupDelay" value="3"/>
    </bean>

    <bean id="upgradeTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="upgradeJobDetail"/>
        <property name="cronExpression" value="${cron.upgrade}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="upgradeJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="upgradeJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="upgradeJob" class="cn.aiyuedu.bs.back.schedule.UpgradeJob"/>

    <bean id="bookCounterTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="bookCounterJobDetail"/>
        <property name="cronExpression" value="${cron.bookCounter}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="bookCounterJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="bookCounterJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="bookCounterJob" class="cn.aiyuedu.bs.back.schedule.BookCounterJob"/>

    <bean id="statisTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="statisJobDetail"/>
        <property name="cronExpression" value="${cron.statis}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="statisJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="statisJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="statisJob" class="cn.aiyuedu.bs.back.schedule.StatisJob"/>

    <bean id="providerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="providerJobDetail"/>
        <property name="cronExpression" value="${cron.provider}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="providerJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="providerJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="providerJob" class="cn.aiyuedu.bs.back.schedule.ProviderJob"/>

    <!-- 消息push  -->
    <bean id="pushInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="pushInfoJobDetail"/>
        <property name="cronExpression" value="${cron.push}" />
    </bean>
    <bean id="pushInfoJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="pushInfoJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="pushInfoJob" class="cn.aiyuedu.bs.back.schedule.PushInfoJob"/>

    <!-- 自动发布章节 -->
    <bean id="chapterAutoPublishTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="chapterAutoPublishJobDetail"/>
        <property name="cronExpression" value="${cron.chapterAutoPublish}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="chapterAutoPublishJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="chapterAutoPublishJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="chapterAutoPublishJob" class="cn.aiyuedu.bs.back.schedule.ChapterAutoPublishJob"/>

    <bean id="categoryTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="categoryJobDetail"/>
        <property name="cronExpression" value="${cron.category}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="categoryJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="categoryJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="categoryJob" class="cn.aiyuedu.bs.back.schedule.CategoryJob"/>

    <bean id="tagTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="tagJobDetail"/>
        <property name="cronExpression" value="${cron.tag}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="tagJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="tagJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="tagJob" class="cn.aiyuedu.bs.back.schedule.TagJob"/>

    <bean id="batchTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="batchJobDetail"/>
        <property name="cronExpression" value="${cron.batch}"/>
        <property name="startDelay" value="15000"/>
    </bean>
    <bean id="batchJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="batchJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="batchJob" class="cn.aiyuedu.bs.back.schedule.BatchJob"/>

</beans>
